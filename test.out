["hello"; Space; "world"; Space; Newline; Space; GroupOne (2, "gre", Space, GroupAll (2, "arg", Space, "arg"))]
*************************
hello world
  gre arg arg
*************************
[GroupOne (0, "f", Space, GroupOne (2, "x"))]
*************************
f x
*************************
[GroupOne (0, "fdsgoklkmeee", Space, GroupOne (2, "xdsgsdg"))]
*************************
fdsgoklkmeee xdsgsdg
*************************
[GroupOne
  (0,
    "(",
    "fun",
    Space,
    "x",
    Space,
    "->",
    Space,
    GroupOne (2, GroupOne (0, "fdsgo", Space, GroupOne (2, GroupOne (0, "(", "x", Space, GroupOne (2, "xdsgsdg"), ")")))),
    ")")]
*************************
(fun x ->
  fdsgo (x xdsgsdg))
*************************
[GroupOne
  (0,
    "(",
    "fun",
    Space,
    "x",
    Space,
    "->",
    Space,
    GroupOne (2, GroupOne (0, "fdsgvbcvvfo", Space, GroupOne (2, GroupOne (0, "(", "xffd", Space, GroupOne (2, "xdsgsdg"), ")")))),
    ")")]
*************************
(fun x ->
  fdsgvbcvvfo
    (xffd xdsgsdg))
*************************
["["; GroupAll (2, ); "]"]
*************************
[]
*************************
["["; GroupAll (2, "x", ";", Space, Space, "y"); "]"]
*************************
[x; y]
*************************
["[";
  GroupAll
  (2,
    "kjh",
    ";",
    Space,
    Space,
    "lj",
    ";",
    Space,
    Space,
    "iop",
    ";",
    Space,
    Space,
    "rt",
    ";",
    Space,
    Space,
    "vbn",
    ";",
    Space,
    Space,
    "hjk",
    ";",
    Space,
    Space,
    "gkgytuuhi");
  "]"]
*************************
[kjh;
  lj;
  iop;
  rt;
  vbn;
  hjk;
  gkgytuuhi]
*************************
[GroupOne (0, "let", Space, "x", Space, "=", Space, GroupOne (2, "x"), Space, "in", Space, Newline, Space, "y")]
*************************
let x = x in
y
*************************
[GroupOne
  (0,
    "let",
    Space,
    "x",
    Space,
    "=",
    Space,
    GroupOne (2,
      GroupOne (0,
        "(",
        "fun",
        Space,
        "x",
        Space,
        "->",
        Space,
        GroupOne (2, GroupOne (0, "fdsgo", Space, GroupOne (2, GroupOne (0, "(", "x", Space, GroupOne (2, "xdsgsdg"), ")")))),
        ")")),
    Space,
    "in",
    Space,
    Newline,
    Space,
    "y")]
*************************
let x =
  (fun x ->
    fdsgo (x xdsgsdg)) in
y
*************************
